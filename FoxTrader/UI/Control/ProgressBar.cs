using static FoxTrader.Constants;

namespace FoxTrader.UI.Control
{
    /// <summary>Progress bar</summary>
    internal class ProgressBar : Label
    {
        private float m_progress;

        /// <summary>Initializes a new instance of the <see cref="ProgressBar" /> class</summary>
        /// <param name="c_parentControl">Parent control</param>
        public ProgressBar(GameControl c_parentControl) : base(c_parentControl)
        {
            if (MouseInputEnabled)
            {
                MouseInputEnabled = false;
            }

            SetSize(128, 32);
            TextPadding = Padding.m_three;
            IsHorizontal = true;

            Alignment = Pos.Center;
            m_progress = 0;
            AutoLabel = true;
        }

        /// <summary>Determines whether the control is horizontal</summary>
        public bool IsHorizontal
        {
            get;
            set;
        }

        /// <summary>Progress value (0-1)</summary>
        public float Value
        {
            get
            {
                return m_progress;
            }
            set
            {
                if (value < 0)
                {
                    value = 0;
                }
                if (value > 1)
                {
                    value = 1;
                }

                m_progress = value;
                if (AutoLabel)
                {
                    var a_displayVal = (int)(m_progress * 100);
                    Text = a_displayVal + "%";
                }
            }
        }

        /// <summary>Determines whether the label text is autogenerated from value</summary>
        public bool AutoLabel
        {
            get;
            set;
        }

        /// <summary>Renders the control using specified skin</summary>
        /// <param name="c_skin">Skin to use</param>
        protected override void Render(Skin c_skin)
        {
            c_skin.DrawProgressBar(this, IsHorizontal, m_progress);
        }
    }
}